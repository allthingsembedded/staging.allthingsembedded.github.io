<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Undefined Behavior on AllThingsEmbedded</title><link>https://allthingsembedded.com/staging-web/tags/undefined-behavior/</link><description>Recent content in Undefined Behavior on AllThingsEmbedded</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sat, 25 Sep 2021 20:26:21 +0200</lastBuildDate><atom:link href="https://allthingsembedded.com/staging-web/tags/undefined-behavior/index.xml" rel="self" type="application/rss+xml"/><item><title>Bare Metal C++ Register Access API</title><link>https://allthingsembedded.com/staging-web/post/bare-metal-register-access-api/</link><pubDate>Sat, 25 Sep 2021 20:26:21 +0200</pubDate><guid>https://allthingsembedded.com/staging-web/post/bare-metal-register-access-api/</guid><description>Introduction to memory-mapping Note: This section is introductory material for those who are not yet familiar with the concept of memory-mapping. If you are already experienced with memory-mapping feel free to jump to the next section. Most likely you won&amp;rsquo;t miss anything new.
One of the most common ways of accessing peripherals from a CPU is memory-mapping. In short, this means that the address space of the CPU has some addresses that when accessed read/write peripheral&amp;rsquo;s registers.</description></item></channel></rss>